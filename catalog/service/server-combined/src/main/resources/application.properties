#
# Copyright (C) 2020 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


## NESSIE CORE
nessie.version.store.type=IN_MEMORY
quarkus.datasource.db-kind=postgresql
quarkus.mongodb.database=nessie
quarkus.cassandra.keyspace=nessie
quarkus.cassandra.health.enabled=false

# this is needed ... *sigh*
quarkus.dynamodb.sync-client.type=apache


nessie.catalog.default-branch=main
nessie.catalog.default-warehouse.name=warehouse
nessie.catalog.default-warehouse.location=/tmp/nessie-warehouse


# Quarkus settings
## Visit here for all configs: https://quarkus.io/guides/all-config
## some parameters are only configured at build time. These have been marked as such https://quarkus.io/guides/config#overriding-properties-at-runtime
quarkus.log.level=INFO
quarkus.log.console.level=INFO
# Somehow the trace-relevant IDs do not appear on the console, but they do in a log file... :(
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%X{traceId},%X{spanId},%X{sampled}] [%c{3.}] (%t) %s%e%n
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%X{traceId},%X{spanId},%X{sampled}] [%c{3.}] (%t) %s%e%n
quarkus.log.category."io.netty".level=WARN
# Effectively disable HTTP request logging to the console (HTTP access logs happen at INFO level)
quarkus.log.category."io.quarkus.http.access-log".level=${HTTP_ACCESS_LOG_LEVEL:INFO}

## Quarkus http related settings
quarkus.http.port=19110
quarkus.http.test-port=0
quarkus.http.access-log.enabled=true
quarkus.http.enable-compression=true
quarkus.http.enable-decompression=true
quarkus.http.compress-media-types=application/json,text/html,text/plain

# fixed at buildtime
quarkus.resteasy-reactive.path=/

## Quarkus auth settings
#quarkus.oidc.credentials.secret=
#quarkus.oidc.client-id=
nessie.server.authentication.enabled=false
# Note: /iceberg/v1/oauth/tokens must be anonymous
nessie.server.authentication.anonymous-paths=/q/health/live,/q/health/live/,/q/health/ready,/q/health/ready/,/iceberg/v1/oauth/tokens
# to be overwritten by end user when enabling OpenID validation
quarkus.oidc.auth-server-url=http://127.255.0.0:0/auth/realms/unset/
# fixed at buildtime
quarkus.http.auth.basic=false
quarkus.oidc.enabled=true

## Quarkus swagger settings
# fixed at buildtime
# The Swagger-UI is somewhat "overwhelmed", because the core Nessie types appear as well (could
# not find a way to _exclude_ types), and some Iceberg types are not properly mapped (like 'Snapshot').
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.enable=true
quarkus.swagger-ui.filter=catalog-v1

quarkus.application.name=Nessie Catalog + Core
quarkus.banner.path=nessie-banner.txt

## sentry specific settings
quarkus.log.sentry.level=ERROR
quarkus.log.sentry.in-app-packages=org.projectnessie
quarkus.log.sentry=false
#quarkus.log.sentry.dsn=https://<fillin>.ingest.sentry.io/<fillin>

# Quarkus build settings - only change if building/deploying locally

## Quarkus required setting for third party indexing
# fixed at buildtime
quarkus.index-dependency.guava.group-id=com.google.guava
quarkus.index-dependency.guava.artifact-id=guava
quarkus.index-dependency.protobuf.group-id=com.google.protobuf
quarkus.index-dependency.protobuf.artifact-id=protobuf-java

# Metrics collection settings
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.binder.jvm=true

# Trace collection settings
# (see https://quarkus.io/guides/opentelemetry#quarkus-opentelemetry_quarkus.otel.logs.exporter)
quarkus.otel.traces.sampler=parentbased_always_on
quarkus.otel.traces.sampler.arg=1.0d
# The trace collector endpoint URL to connect to.
# Required, except in dev mode where it is set to http://localhost:4317 automatically.
# quarkus.otel.exporter.otlp.traces.endpoint=http://otlp-collector:4317

# Quarkus build settings - only change if building/deploying locally

## quarkus container specific settings
# fixed at buildtime
quarkus.container-image.group=projectnessie
quarkus.container-image.name=nessie-catalog-service-server

mp.openapi.extensions.smallrye.operationIdStrategy=METHOD

# order matters below, since the first matching pattern will be used
# TODO
quarkus.micrometer.binder.http-server.match-patterns=\
  /api/v2/trees/.*/contents/.*=/api/v2/trees/{ref}/contents/{key}, \
  /contents/.*=/contents/{key}

%test.quarkus.devservices.enabled=false
%test.quarkus.jacoco.report=false
%test.quarkus.jacoco.reuse-data-file=true
# TODO add tests using OIDC / add OIDC test framework
%test.quarkus.oidc.enabled=false

# Disable Micrometer JVM-Metrics for tests.
#
# TL;DR Quarkus restarts (due to profile/configuration changes) causes memory leaks with
# Micrometer's JVM GC Metrics.
#
# See https://github.com/quarkusio/quarkus/issues/24210#issuecomment-1064833013 why OOMs, or worse,
# endless 'Retried waiting for GCLocker too often allocating * words' messages instead of a
# "proper OutOfMemoryException" happen.
%test.quarkus.micrometer.binder.jvm=false

%test.quarkus.test.arg-line=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
