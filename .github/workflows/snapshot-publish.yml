name: Publish in-development builds from main

on:
  schedule:
    # Run daily on week days
    - cron:  '0 11,23 * * 1-5'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  java:
    name: Publish from main
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      SPARK_LOCAL_IP: localhost
    if: github.repository == 'projectnessie/nessie'

    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          fetch-depth: '0'
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: true

      - name: List projects
        run: ./gradlew projects

      - name: Gradle / publish snapshot
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_ACCESS_ID }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_TOKEN }}
        run: |
          # 2 Retries - due to Gradle's old and unfixed CME bug
          ./gradlew compileAll jar testClasses || \
            ./gradlew compileAll jar testClasses || \
            ./gradlew compileAll jar testClasses 

          # 2 Retries - to mitigate "HTTP/502 Bad Gateway" issues
          ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Prelease -Puber-jar || \
            ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Prelease -Puber-jar || \
            ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository -Prelease -Puber-jar

      - name: Docker images publishing
        env:
          ARTIFACTS: ../build-artifacts
        run: |
          rm -rf "${ARTIFACTS}"
          mkdir -p "${ARTIFACTS}"

          echo '${{ secrets.GITHUB_TOKEN }}' | docker login ghcr.io -u $ --password-stdin 
          tools/dockerbuild/build-push-images.sh \
            -a "${ARTIFACTS}" \
            -g ":nessie-quarkus" \
            -p "servers/quarkus-server" \
            ghcr.io/projectnessie/nessie-unstable
          tools/dockerbuild/build-push-images.sh \
            -a "${ARTIFACTS}" \
            -g ":nessie-gc-tool" \
            -p "gc/gc-tool" \
            -d "Dockerfile-gctool" \
            ghcr.io/projectnessie/nessie-gc-unstable

          rm -rf "${ARTIFACTS}"
