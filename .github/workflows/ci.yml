# Copyright (C) 2020 Dremio
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Unifies main + PR workflow.
#
# The unified CI workflow consists of 2 "stages":
# - Checks - test, intTest, NesQuEIT, etc
# - Finalize - a "success" dummy job for PRs + a "save to github-cache" job for push-to-main
#
# Utilizes the Gradle build cache for all stages. The updated build cache
# of the jobs in the checks stage are saved as artifacts (with the minimum
# retention period). The updated build cache is pushed back to GigHub's
# cache when the checks have successfully finished.

name: CI build

on:
  push:
    branches:
      - catalog
      - release-*
    paths-ignore:
      - 'LICENSE'
      - 'NOTICE'
      - '**.md'
      - '!site/**'
      - '.github/renovate.json5'
      - '.github/workflows/release*.yml'
      - '.github/workflows/check*.yml'
      - '.idea/**'
      - '.editorconfig'
  pull_request:
    types: [labeled, opened, synchronize, reopened]

# For the main branch: let all CI runs complete, one after the other. This has a couple advantages:
# * Site deployments happen in commit-order
# * Saved Gradle cache are persisted in commit-order
# * (Potentially) more GH runners available for PRs
concurrency:
  # PRs: 1 CI run concurrently / older ones are cancelled
  # main branch: 1 CI run concurrently / all commits / no cancellation
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  code-checks:
    name: CI Code Checks et al
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      # Needed for the Quarkus plugin - can likely go away once we use Quarkus 3 or newer
      - name: Bump Gradle daemon heap
        run: sed -i 's/-Xms.*/-Xms6G -Xmx6G -XX:MaxMetaspaceSize=1g \\/' gradle.properties

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare
        with:
          java-version: ${{ matrix.java-version }}

      - name: Gradle / Compile
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            spotlessCheck
            compileAll
            -x :nessie-quarkus:compileAll
            -x :nessie-quarkus-cli:compileAll
            -x :nessie-events-quarkus:compileAll
            --scan

      - name: Gradle / Compile Quarkus
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            :nessie-quarkus:compileAll
            :nessie-quarkus-cli:compileAll
            :nessie-events-quarkus:compileAll
            --scan

      - name: Gradle / Checkstyle
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: checkstyle --scan

      - name: Gradle / Assemble
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: assemble --scan

      - name: Gradle / Publish to Maven local
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: publishToMavenLocal --scan

      # This is a rather quick one and uses the output of 'publishToMavenLocal', which uses the
      # outputs of 'assemble'
      - name: Gradle / build tools integration tests
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: buildToolsIntegrationTest

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'code-checks'
          java-version: ${{ matrix.java-version }}

  test:
    name: CI Test
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare
        with:
          java-version: ${{ matrix.java-version }}

      - name: Gradle / test
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            test
            :nessie-client:check 
            -x :nessie-client:intTest 
            -x :nessie-quarkus:test
            -x :nessie-quarkus-cli:test
            -x :nessie-events-quarkus:test
            --scan

      - name: Capture Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ci-test-reports
          path: |
            **/build/reports/*
            **/build/test-results/*
          retention-days: 7

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'test'
          java-version: ${{ matrix.java-version }}

  test-quarkus:
    name: CI Test Quarkus
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare
        with:
          java-version: ${{ matrix.java-version }}

      - name: Gradle / Test Quarkus
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            :nessie-client:test
            :nessie-quarkus:test
            :nessie-events-quarkus:test
            --scan

      - name: Dump quarkus.log
        if: ${{ failure() }}
        run: |
          find . -path "**/build/quarkus.log" | while read ql ; do
            echo "::group::Quarkus build log $ql"
            cat $ql
            echo "::endgroup::"
          done

      - name: Capture Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ci-test-quarkus-reports
          path: |
            **/build/quarkus.log
            **/build/reports/*
            **/build/test-results/*
          retention-days: 7

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'test-quarkus'
          java-version: ${{ matrix.java-version }}

  int-test:
    name: CI intTest
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare

      - name: Gradle / intTest
        run: |
          echo "::group::Collect :nessie-versioned-storage projects"
          ./gradlew :listProjectsWithPrefix --prefix :nessie-versioned-persist- --output ../persist-prjs.txt --exclude
          echo "::endgroup::"

          echo "::group::Collect :nessie-versioned-persist projects"
          ./gradlew :listProjectsWithPrefix --prefix :nessie-versioned-storage- --output ../storage-prjs.txt --exclude
          echo "::endgroup::"

          echo "::group::Collect :nessie-spark-extensions projects"
          ./gradlew :listProjectsWithPrefix --prefix :nessie-spark-ext --output ../spark-prjs.txt --exclude
          echo "::endgroup::"

          ./gradlew intTest \
            -x :nessie-quarkus:intTest \
            -x :nessie-quarkus-cli:intTest \
            -x :nessie-events-quarkus:intTest \
            -x :nessie-catalog-service-server:intTest \
            $(cat ../persist-prjs.txt) \
            $(cat ../storage-prjs.txt) \
            $(cat ../spark-prjs.txt) \
            --scan

      - name: Capture Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ci-inttest-reports
          path: |
            **/build/reports/*
            **/build/test-results/*
          retention-days: 7

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'int-test'
          java-version: ${{ matrix.java-version }}

  int-test-stores:
    name: CI intTest versioned/stores
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare
        with:
          java-version: ${{ matrix.java-version }}

      - name: Gradle / intTest versioned/stores
        run: |
          echo "::group::Collect :nessie-versioned-storage projects"
          ./gradlew :listProjectsWithPrefix --prefix :nessie-versioned-storage- --output ../storage-prjs.txt
          echo "::endgroup::"

          echo "::group::Collect :nessie-versioned-persist projects"
          ./gradlew :listProjectsWithPrefix --prefix :nessie-versioned-persist- --output ../persist-prjs.txt
          echo "::endgroup::"

          ./gradlew $(cat ../persist-prjs.txt) $(cat ../storage-prjs.txt) --scan

      - name: Capture Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ci-inttest-stores-reports
          path: |
            **/build/reports/*
            **/build/test-results/*
          retention-days: 7

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'int-test-stores'
          java-version: ${{ matrix.java-version }}

  int-test-integrations:
    name: CI intTest integrations
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    env:
      SPARK_LOCAL_IP: localhost
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare

      - name: Gradle / intTest integrations
        run: |
          echo "::group::Collect :nessie-spark-extensions projects"
          ./gradlew :listProjectsWithPrefix --prefix :nessie-spark-ext --output ../spark-prjs.txt
          echo "::endgroup::"

          ./gradlew $(cat ../spark-prjs.txt) --scan

      - name: Capture Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ci-inttest-integrations-reports
          path: |
            **/build/reports/*
            **/build/test-results/*
          retention-days: 7

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'int-test-integrations'

  int-test-quarkus:
    name: CI intTest Quarkus
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      - name: Prepare Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-prepare
        with:
          java-version: ${{ matrix.java-version }}

      - name: Gradle / intTest Quarkus
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: |
            :nessie-quarkus:intTest
            :nessie-quarkus-cli:intTest
            :nessie-events-quarkus:intTest
            :nessie-catalog-service-server:intTest
            :nessie-catalog-service-server:intTest
            :nessie-catalog-service-server:sparkIntTest
            --scan

      - name: Dump quarkus.log
        if: ${{ failure() }}
        run: |
          find . -path "**/build/quarkus.log" | while read ql ; do
            echo "::group::Quarkus build log $ql"
            cat $ql
            echo "::endgroup::"
          done

      - name: Capture Test Reports
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ci-inttest-quarkus-reports
          path: |
            **/build/quarkus.log
            **/build/reports/*
            **/build/test-results/*
          retention-days: 7

      - name: Save partial Gradle build cache
        uses: ./.github/actions/ci-incr-build-cache-save
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          job-name: 'int-test-quarkus'
          java-version: ${{ matrix.java-version }}

  determine-jobs:
    name: CI Determine jobs
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    outputs:
      # Each "conditional" job has a mapped output here, also a "non-PR" case and a "PR" case
      # with label and globs (at the end of the script).
      docker: ${{ steps.determine.outputs.docker }}
      nesqueit: ${{ steps.determine.outputs.nesqueit }}
    steps:
      - name: install minimatch
        shell: bash
        run: npm install minimatch@"^7.4.3"
      - name: Determine conditional jobs to run
        id: determine
        uses: actions/github-script@v7
        with:
          script: |
            const {Minimatch} = require("minimatch");

            async function getChangedFiles(pull_request) {
              const listFilesOptions = github.rest.pulls.listFiles.endpoint.merge({
                owner: pull_request.base.repo.owner.login,
                repo: pull_request.base.repo.name,
                pull_number: pull_request.number,
              });
              return github.paginate(listFilesOptions).then(resp => resp.map(f => f.filename))
            }

            function isMatch(changedFile, matchers) {
              for (const matcher of matchers) {
                if (matcher.match(changedFile)) {
                  core.info("Match found for changed file " + changedFile);
                  return true;
                }
              }
              core.info("No changed file matched the globs");
              return false;
            }

            function filesMatchAnyGlob(changedFiles, globs) {
              const matchers = globs.map(g => new Minimatch(g));
              for (const changedFile of changedFiles) {
                if (isMatch(changedFile, matchers)) {
                  return true;
                }
              }
              return false;
            }

            function checkLabelOrGlobs(pr, changedFiles, labelName, globs) {
              core.info("Checking for " + labelName);

              // If the PR has the given label, then let the conditional job run.
              for (const label of pr.labels) {
                if (label.name === labelName) {
                  core.info("PR has label " + labelName);
                  return true;
                }
              }

              // For pull request, check the list of changed files against the given globs.
              // Let the conditional job run, if any of the globs matches and of the changed files.
              core.info("Checking changed files against globs " + globs);
              return filesMatchAnyGlob(changedFiles, globs);
            }

            ///////////////////////////////////////////////////////////////////////////////////////
            // "Non PR" case:
            // Behavior of the conditional jobs when the event that triggered the workflow is not
            // for a pull request (usually a push-to-main).
            //
            if (!context.payload || !context.payload.pull_request) {
              core.info("Not a pull-request, enabling all jobs.");

              // Yield default values for all event payload types, except pull_request
              core.setOutput('docker', true);
              core.setOutput('nesqueit', false); // handled in a scheduled job
              return true;
            }

            ///////////////////////////////////////////////////////////////////////////////////////
            // "PR" case:
            // Determine the whether the conditional jobs shall run, based on a label name, which
            // has been manually added, or, if the label is not present, based on some globs to
            // check.

            const pr = context.payload.pull_request
            core.info("pull-request #" + pr.number);

            // Retrieves the full list of changed files for the PR.
            const changedFiles = await getChangedFiles(pr);

            core.startGroup('PR job check / Docker');
            core.setOutput('docker', checkLabelOrGlobs(pr, changedFiles,
              'pr-docker',
              ['gradle/wrapper/**', 'tools/dockerbuild/**', 'helm/**', '.github/**']));
            core.endGroup();

            core.startGroup('PR job check / NesQuEIT');
            core.setOutput('nesqueit', checkLabelOrGlobs(pr, changedFiles,
              'pr-integrations',
              ['gradle/wrapper/**', 'integrations/**', 'api/**', '.github/**']));
            core.endGroup();

  store-cache:
    # Store the Gradle cache to GH cache as soon as all relevant Nessie/Gradle jobs have finished.
    name: CI Store Cache
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    if: github.event_name == 'push' && github.ref == 'refs/heads/catalog'
    needs:
      # Only include jobs that use Nessie's Gradle cache, especially excluding NesQuEIT, which
      # is a "very special" citizen and also not run for "main" CI, which does
      # not add anything to the Gradle cache that's not already produced by other jobs.
      - code-checks
      - test
      - test-quarkus
      - int-test
      - int-test-stores
      - int-test-integrations
      - int-test-quarkus
    strategy:
      max-parallel: 2
      matrix:
        java-version: ['17']
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - name: Setup runner
        uses: ./.github/actions/setup-runner
      - name: Setup Java, Gradle
        uses: ./.github/actions/dev-tool-java
        with:
          java-version: ${{ matrix.java-version }}

      - name: Collect partial Gradle build caches
        uses: ./.github/actions/ci-incr-build-cache-prepare
        with:
          java-version: ${{ matrix.java-version }}
          cache-read-only: false

      - name: Trigger Gradle home cleanup
        run: ./gradlew --no-daemon :showVersion

      # Note: the "Post Gradle invocation" archives the updated build cache.
